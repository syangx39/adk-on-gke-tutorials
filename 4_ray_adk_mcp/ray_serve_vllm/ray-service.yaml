apiVersion: ray.io/v1
kind: RayService
metadata:
  name: deepseek-r1-qwen-32b-ray-deployment
spec:
  serveConfigV2: |
    applications:
    - name: llm
      route_prefix: /
      import_path: serve_chat_completion:model
      runtime_env:
        env_vars:
          MODEL_ID: "deepseek-ai/DeepSeek-R1-Distill-Qwen-32B"
          TENSOR_PARALLELISM: "8"
          MAX_MODEL_LEN: "32768"
          VLLM_ENABLE_AUTO_TOOL_CHOICE: "true"
          TOOL_PARSER_NAME: "hermes"
      deployments:
      - name: VLLMDeployment
        num_replicas: 1
        ray_actor_options:
          num_cpus: 10
          num_gpus: 8
  rayClusterConfig:
    headGroupSpec:
      rayStartParams:
        dashboard-host: "0.0.0.0"
      template:
        metadata:
          labels:
            ai.gke.io: rayserve
        spec:
          serviceAccount: adk-ray-agent-sa
          volumes:
            - name: dshm
              emptyDir:
                medium: Memory
                sizeLimit: 8Gi
          containers:
            - name: ray-head
              image: us-central1-docker.pkg.dev/gke-ai-open-models/ray-repo/vllm-ray-service:latest
              resources:
                limits:
                  cpu: "10"
                  memory: "20Gi"
                  ephemeral-storage: "15Gi"
                requests:
                  cpu: "10"
                  memory: "20Gi"
                  ephemeral-storage: "15Gi"
              ports:
                  # Ray Global Control Store 
                  # Handles cluster metadata management, actor discovery, other control plane operations
                  # All Ray workers and drivers connect to this port
                - containerPort: 6379
                  name: gcs-server
                  # Ray Dashboard
                - containerPort: 8265
                  name: dashboard
                  # Ray Client server
                  # Enable remote connections to the Ray cluster. External clients can connect using: ray.init(address="ray://<host>:10001")
                - containerPort: 10001
                  name: client
                  # Ray Serve
                  # HTTP server for model server and inference requets
                - containerPort: 8000
                  name: serve
              env:
                - name: HUGGING_FACE_HUB_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: hf-secret
                      key: hf_api_token
                - name: PYTHONPATH
                  value: "/app:${PYTHONPATH}"
              volumeMounts:
              - mountPath: /dev/shm
                name: dshm
    workerGroupSpecs:
      - replicas: 1
        minReplicas: 1  # Ensure at least one worker
        maxReplicas: 1
        groupName: gpu-group
        rayStartParams: {}
        template:
          metadata:
            labels:
              ai.gke.io: rayserve
          spec:
            nodeSelector:
              cloud.google.com/gke-accelerator: nvidia-l4
            serviceAccount: adk-ray-agent-sa
            volumes:
            - name: dshm
              emptyDir:
                medium: Memory
                sizeLimit: 20Gi
            containers:
              - name: llm
                image: us-central1-docker.pkg.dev/gke-ai-open-models/ray-repo/vllm-ray-service:latest
                env:
                  - name: HUGGING_FACE_HUB_TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: hf-secret
                        key: hf_api_token
                  - name: PYTHONPATH
                    value: "/app:${PYTHONPATH}"
                resources:
                  limits:
                    cpu: "66"
                    memory: "264Gi"
                    nvidia.com/gpu: "8"
                  requests:
                    cpu: "66"
                    memory: "264Gi"
                    nvidia.com/gpu: "8"
                volumeMounts:
                - mountPath: /dev/shm
                  name: dshm
                readinessProbe:
                  exec:
                    command:
                      - bash
                      - -c
                      - wget -T 5 -q -O- http://localhost:52365/api/local_raylet_healthz | grep success
                  initialDelaySeconds: 300
                  periodSeconds: 30
                  timeoutSeconds: 90
                  failureThreshold: 15
                livenessProbe:
                  exec:
                    command:
                      - bash
                      - -c
                      - wget -T 5 -q -O- http://localhost:52365/api/local_raylet_healthz | grep success
                  initialDelaySeconds: 60
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 10